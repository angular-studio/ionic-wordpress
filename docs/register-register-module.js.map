{"version":3,"sources":["webpack:///./src/app/register/register.module.ts","webpack:///./src/app/register/register.page.html","webpack:///./src/app/register/register.page.scss","webpack:///./src/app/register/register.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AACE;AAI3B;AAEpB,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAeF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAb9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;YAC5B,SAAS,EAAE;gBACT,sDAAW;aACZ;SACF,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;AChC/B,g9B;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAG9B;AACgD;AAOpE;IAGE,sBACU,WAAwB,EACxB,WAAwB;QADxB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,+BAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,MAAM,EAAE,CAAC,MAAM,CAAC;SACjB,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;YAC3B,UAAU,EAAE,MAAM;YAClB,MAAM,EAAE,UAAU;SACnB,CAAC,CAAC,SAAS,CAAC,aAAG;YACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+BAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IA9BU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAKuB,sDAAW;YACX,0DAAW;OALvB,YAAY,CAgCxB;IAAD,mBAAC;CAAA;AAhCwB","file":"register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { RegisterPage } from './register.page';\n\nimport {\n  AuthService\n} from 'ngx-wooapi';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage],\n  providers: [\n    AuthService\n  ]\n})\nexport class RegisterPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>register</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Enter user name</ion-label>\\n      <ion-input formControlName=\\\"username\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Enter display name</ion-label>\\n      <ion-input formControlName=\\\"display_name\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Enter email address</ion-label>\\n      <ion-input formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    \\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Enter user password</ion-label>\\n      <ion-input formControlName=\\\"user_pass\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-button size=\\\"small\\\" type=\\\"submit\\\">Register</ion-button>\\n  </form>\\n</ion-content>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {\n  AuthService\n} from 'ngx-wooapi';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  registerForm: FormGroup;\n\n  constructor(\n    private authservice: AuthService,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      display_name: ['', Validators.required],\n      email: ['', Validators.required],\n      user_pass: ['', Validators.required],\n      nonce: ['', Validators.required],\n      notify: ['both']\n    });\n    this.authservice.createNonce({\n      controller: 'user',\n      method: 'register'\n    }).subscribe(res => {\n      console.log(res);\n      this.registerForm.get('nonce').patchValue(res.nonce);\n    });\n  }\n  register() {\n    console.log(this.registerForm.value);\n    this.authservice.register(this.registerForm.value).subscribe(res => {\n      console.log(res);\n    });\n  }\n\n}\n"],"sourceRoot":""}